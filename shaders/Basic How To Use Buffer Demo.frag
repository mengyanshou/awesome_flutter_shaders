//In ShaderToy, buffer shaders (like Buffer A, Buffer B, etc.) are  processed before the image shader. 

//1. **Buffer Shaders (Buffer A, Buffer B, etc.):** These shaders are executed first. Each buffer shader can render its output to a texture that can then be used as an input for subsequent shaders, including other buffer shaders and the final image shader.
//2. **Image Shader:** This shader is processed last and can use the outputs of the buffer shaders as inputs.

//To illustrate, let's consider a scenario where you have a Buffer A and an Image shader:
//In this demo we create a simple gradient in BufferA and write it to iChannel0 that we then read in the Image shader.

//### Image Shader
//This shader uses the texture generated by Buffer A.
#include <common/common_header.frag>
uniform sampler2D iChannel0;
void mainImage(out vec4 fragColor, in vec2 fragCoord) {
    vec2 uv = fragCoord / iResolution.xy;

    // Sample the texture from Buffer A
    vec4 bufferAColor = texture(iChannel0, uv);

    // Example: Use the color from Buffer A
    vec3 color = bufferAColor.rgb;

    fragColor = vec4(color, 1.0);
}
#include <common/main_shadertoy.frag>